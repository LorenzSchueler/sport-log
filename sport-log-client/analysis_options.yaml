# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    always_use_package_imports: true
    always_declare_return_types: true
    avoid_dynamic_calls: true
    avoid_final_parameters: true
    avoid_redundant_argument_values: true
    avoid_returning_null_for_future: true
    avoid_returning_this: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_void_async: true
    cancel_subscriptions: true
    cascade_invocations: true
    cast_nullable_to_non_nullable: true
    combinators_ordering: true
    directives_ordering: true
    do_not_use_environment: true
    eol_at_end_of_file: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    no_default_cases: true
    noop_primitive_operations: true
    no_runtimeType_toString: true
    omit_local_variable_types: true
    parameter_assignments: true
    # prefer_single_quotes: true
    # prefer_double_quotes: true
    prefer_constructors_over_static_methods: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_int_literals: true
    prefer_null_aware_method_calls: true
    require_trailing_commas: true
    secure_pubspec_urls: true
    sized_box_shrink_expand: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    sort_pub_dependencies: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    # unnecessary_breaks: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_null_checks: true
    unnecessary_parenthesis: true
    unnecessary_statements: true
    unreachable_from_main: true
    use_if_null_to_convert_nulls_to_bools: true
    use_late_for_private_fields_and_variables: true
    use_named_constants: true
    use_super_parameters: true

analyzer:
  exclude:
    - "**/*.g.dart"
    - lib/generated_plugin_registrant.dart
    - lib/widgets/custom_icons.dart

  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  plugins:
    - dart_code_metrics

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    # cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 5
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
    - "**/*.g.dart"
  rules:
    # - avoid-returning-widgets
    - always-remove-listener
    # - avoid-non-null-assertion
    - avoid-throw-in-catch-block
    - avoid-unused-parameters
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - binary-expression-operand-order
    - no-boolean-literal-compare
    # - no-empty-block
    - no-equal-then-else
    - prefer-async-await
    - prefer-conditional-expressions
    - prefer-immediate-return 
    - prefer-extracting-callbacks:
        ignored-named-arguments:
          - onChanged
          - onTap
        allowed-line-count: 5
  rules-exclude:
    - "**/*.g.dart"