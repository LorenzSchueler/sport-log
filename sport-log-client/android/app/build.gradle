plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 36
    //ndkVersion flutter.ndkVersion
    ndkVersion = "27.0.12077973"

    packagingOptions {
      pickFirst 'lib/x86/libc++_shared.so'
      pickFirst 'lib/x86_64/libc++_shared.so'
      pickFirst 'lib/armeabi-v7a/libc++_shared.so'
      pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    lintOptions { 
      checkReleaseBuilds false // TODO remove
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    namespace "org.sport_log.sport_log_client"

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "org.sport_log.sport_log_client"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 29
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            if (System.getenv("CI")) {
                signingConfig signingConfigs.debug
            } else {
                signingConfig signingConfigs.release
            }
        }
    }

    flavorDimensions "appName"

    productFlavors {
        development {
            getIsDefault().set(true)
            dimension "appName"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }

        production {
            dimension "appName"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'org.joda:joda-convert:3.0.1'
    implementation 'com.google.j2objc:j2objc-annotations:1.3'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
}
