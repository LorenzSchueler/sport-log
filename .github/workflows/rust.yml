name: Rust

permissions:
  contents: read
  checks: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: format
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: cargo fmt
      run: cargo fmt --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: cargo clippy
      run: cargo clippy --all-features --examples --tests -- --deny warnings
    
  doc:
    name: doc
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
    - name: cargo doc
      env:
        RUSTDOCFLAGS: "-D warnings" 
      run: cargo doc --no-deps --all-features

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
    - name: cargo build
      # build every crate on its own to make sure enabled features from other crates do not mask missing dependencies
      run: cargo build --manifest-path sport-log-action-provider-sportstracker/Cargo.toml &&
           cargo build --manifest-path sport-log-action-provider-wodify-login/Cargo.toml &&
           cargo build --manifest-path sport-log-action-provider-wodify-wod/Cargo.toml &&
           cargo build --manifest-path sport-log-ap-utils/Cargo.toml &&
           cargo build --manifest-path sport-log-scheduler/Cargo.toml &&
           cargo build --manifest-path sport-log-server/Cargo.toml &&
           cargo build --manifest-path sport-log-types/Cargo.toml &&
           cargo build --manifest-path sport-log-derive/Cargo.toml

  test:
    name: test
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: sport_log
      POSTGRES_PASSWORD: test-passwd
      POSTGRES_USER: sport_admin
      ADMIN_PASSWORD_HASH: "$argon2id$v=19$m=4096,t=3,p=1$jfQMFwbuWJW6kYF3K6Opxg$8zmHSEMYeXuxhxl7HNv8/zsgSx/LWm6Iy1EciOBJdQM" # = "admin-passwd"

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: sport_log
          POSTGRES_PASSWORD: test-passwd
          POSTGRES_USER: sport_admin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: env
      run: echo "DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost/$POSTGRES_DB" >> $GITHUB_ENV
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
    - name: install postgresql
      run: |
        sudo apt-get update -y
        sudo apt-get install libpq-dev postgresql-client-common postgresql
    - name: install diesel_cli
      run: cargo install diesel_cli --no-default-features --features postgres
    - name: setup database
      working-directory: sport-log-types
      run: |
        diesel database setup # --locked-schema TODO
        patch src/schema.rs src/schema.patch # TODO
    - name: create sport-log-server.toml file
      working-directory: sport-log-server
      run: |
        echo "
        admin_password = \"$ADMIN_PASSWORD_HASH\"
        user_self_registration = true
        ap_self_registration = true
        database_url = \"$DATABASE_URL\"
        release_address = \"0.0.0.0:8000\"
        debug_address = \"0.0.0.0:8001\"
        " > sport-log-server.toml
    - name: cargo test
      run: cargo test --all-features

  test-end-to-end:
    name: test-end-to-end
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: sport_log
      POSTGRES_PASSWORD: sport_admin_passwd
      POSTGRES_USER: sport_admin
      USERNAME: ScreenshotUser
      PASSWORD: ScreenshotPassword0
      AP_USERNAME: wodify-login
      AP_PASSWORD: Wodify-Login-Password1
      ADMIN_PASSWORD: admin-passwd
      ADMIN_PASSWORD_HASH: "$argon2id$v=19$m=4096,t=3,p=1$jfQMFwbuWJW6kYF3K6Opxg$8zmHSEMYeXuxhxl7HNv8/zsgSx/LWm6Iy1EciOBJdQM"
      BASE_URL: http://localhost:8001

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: sport_log
          POSTGRES_PASSWORD: sport_admin_passwd
          POSTGRES_USER: sport_admin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: env
      run: echo "DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost/$POSTGRES_DB" >> $GITHUB_ENV
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
    - name: install postgresql
      run: |
        sudo apt-get update -y
        sudo apt-get install libpq-dev postgresql-client-common postgresql
    - name: install diesel_cli
      run: cargo install diesel_cli --no-default-features --features postgres
    - name: setup database
      working-directory: sport-log-types
      run: |
        diesel database setup # --locked-schema TODO
        patch src/schema.rs src/schema.patch # TODO
    - name: create sport-log-server.toml file
      working-directory: sport-log-server
      run: |
        echo "
        admin_password = \"$ADMIN_PASSWORD_HASH\"
        user_self_registration = true
        ap_self_registration = true
        database_url = \"postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost/$POSTGRES_DB\"
        release_address = \"0.0.0.0:8000\"
        debug_address = \"0.0.0.0:8001\"
        " > sport-log-server.toml
    - name: run server
      working-directory: sport-log-server
      run: |
        set -e

        cargo build
        cargo run &
        sleep 1
    - name: test end-to-end
      working-directory: test
      run: ./end-to-end.sh

  deps:
    name: unused deps
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: load cache
      uses: Swatinem/rust-cache@v2
    - name: install cargo-machete
      run: cargo install cargo-machete
    - name: cargo machete
      run: cargo machete
